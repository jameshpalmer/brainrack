/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AboutImport } from './routes/about'
import { Route as IndexImport } from './routes/index'
import { Route as conversationCImport } from './routes/(conversation)/_c'
import { Route as conversationCConversationsImport } from './routes/(conversation)/_c.conversations'
import { Route as conversationCConversationConversationIdImport } from './routes/(conversation)/_c.conversation.$conversationId'

// Create Virtual Routes

const conversationImport = createFileRoute('/(conversation)')()

// Create/Update Routes

const conversationRoute = conversationImport.update({
  id: '/(conversation)',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const conversationCRoute = conversationCImport.update({
  id: '/_c',
  getParentRoute: () => conversationRoute,
} as any)

const conversationCConversationsRoute = conversationCConversationsImport.update(
  {
    path: '/conversations',
    getParentRoute: () => conversationCRoute,
  } as any,
)

const conversationCConversationConversationIdRoute =
  conversationCConversationConversationIdImport.update({
    path: '/conversation/$conversationId',
    getParentRoute: () => conversationCRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/(conversation)': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof conversationImport
      parentRoute: typeof rootRoute
    }
    '/(conversation)/_c': {
      id: '/_c'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof conversationCImport
      parentRoute: typeof conversationRoute
    }
    '/(conversation)/_c/conversations': {
      id: '/_c/conversations'
      path: '/conversations'
      fullPath: '/conversations'
      preLoaderRoute: typeof conversationCConversationsImport
      parentRoute: typeof conversationCImport
    }
    '/(conversation)/_c/conversation/$conversationId': {
      id: '/_c/conversation/$conversationId'
      path: '/conversation/$conversationId'
      fullPath: '/conversation/$conversationId'
      preLoaderRoute: typeof conversationCConversationConversationIdImport
      parentRoute: typeof conversationCImport
    }
  }
}

// Create and export the route tree

interface conversationCRouteChildren {
  conversationCConversationsRoute: typeof conversationCConversationsRoute
  conversationCConversationConversationIdRoute: typeof conversationCConversationConversationIdRoute
}

const conversationCRouteChildren: conversationCRouteChildren = {
  conversationCConversationsRoute: conversationCConversationsRoute,
  conversationCConversationConversationIdRoute:
    conversationCConversationConversationIdRoute,
}

const conversationCRouteWithChildren = conversationCRoute._addFileChildren(
  conversationCRouteChildren,
)

interface conversationRouteChildren {
  conversationCRoute: typeof conversationCRouteWithChildren
}

const conversationRouteChildren: conversationRouteChildren = {
  conversationCRoute: conversationCRouteWithChildren,
}

const conversationRouteWithChildren = conversationRoute._addFileChildren(
  conversationRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof conversationCRouteWithChildren
  '/about': typeof AboutRoute
  '/conversations': typeof conversationCConversationsRoute
  '/conversation/$conversationId': typeof conversationCConversationConversationIdRoute
}

export interface FileRoutesByTo {
  '/': typeof conversationCRouteWithChildren
  '/about': typeof AboutRoute
  '/conversations': typeof conversationCConversationsRoute
  '/conversation/$conversationId': typeof conversationCConversationConversationIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof conversationRouteWithChildren
  '/about': typeof AboutRoute
  '/_c': typeof conversationCRouteWithChildren
  '/_c/conversations': typeof conversationCConversationsRoute
  '/_c/conversation/$conversationId': typeof conversationCConversationConversationIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/about' | '/conversations' | '/conversation/$conversationId'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/about' | '/conversations' | '/conversation/$conversationId'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/_c'
    | '/_c/conversations'
    | '/_c/conversation/$conversationId'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  conversationRoute: typeof conversationRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  conversationRoute: conversationRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/"
      ]
    },
    "/": {
      "filePath": "(conversation)",
      "children": [
        "/_c"
      ]
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/_c": {
      "filePath": "(conversation)/_c.tsx",
      "parent": "/",
      "children": [
        "/_c/conversations",
        "/_c/conversation/$conversationId"
      ]
    },
    "/_c/conversations": {
      "filePath": "(conversation)/_c.conversations.tsx",
      "parent": "/_c"
    },
    "/_c/conversation/$conversationId": {
      "filePath": "(conversation)/_c.conversation.$conversationId.tsx",
      "parent": "/_c"
    }
  }
}
ROUTE_MANIFEST_END */
